m3 <- born[3]
w
born <- par("usr")
w <- mcoa1$pseudoeig
col <- rep(grey(1), length(w))
col[1:nf] <- grey(0.8)
col[c(4:length(w))] <- grey(0)
l0 <- length(w)
xx <- seq(born[1], born[1] + (born[2] - born[1]) * l0/60,
le = l0 + 1)
w <- w/max(w)
w <- w * (born[4] - born[3])/4
par(mar = c(0.1, 0.1, 0.1, 0.1))
m3 <- born[3]
plot(mcoa1)
nf <- mcoa1$nf
eig.bottom = TRUE
opar <- par(mar = par("mar"))
on.exit(par(opar))
born <- par("usr")
w <- mcoa1$pseudoeig
col <- rep(grey(1), length(w))
col[1:nf] <- grey(0.8)
col[c(4:length(w))] <- grey(0)
l0 <- length(w)
xx <- seq(born[1], born[1] + (born[2] - born[1]) * l0/60,
le = l0 + 1)
w <- w/max(w)
w <- w * (born[4] - born[3])/4
par(mar = c(0.1, 0.1, 0.1, 0.1))
m3 <- born[3]
w <- m3 + w
rect(xx[1], m3, xx[l0 + 1], w[1], col = grey(1))
for (i in 1:l0) rect(xx[i], m3, xx[i + 1], w[i], col = col[i])
library(ade4)
data(friday87)
w1 <- data.frame(scale(friday87$fau, scal = FALSE))
w2 <- ktab.data.frame(w1, friday87$fau.blo, tabnames = friday87$tab.names)
mcoa1 <- mcoa(w2, "lambda1", scan = FALSE)
mcoa1
plot(mcoa1)
nf <- mcoa1$nf
eig.bottom = TRUE
opar <- par(mar = par("mar"))
on.exit(par(opar))
born <- par("usr")
w <- mcoa1$pseudoeig
col <- rep(grey(1), length(w))
col[1:nf] <- grey(0.8)
col[c(4:length(w))] <- grey(0)
l0 <- length(w)
xx <- seq(born[1], born[1] + (born[2] - born[1]) * l0/60,
le = l0 + 1)
w <- w/max(w)
w <- w * (born[4] - born[3])/4
par(mar = c(0.1, 0.1, 0.1, 0.1))
m3 <- born[3]
w <- m3 + w
rect(xx[1], m3, xx[l0 + 1], w[1], col = grey(1))
for (i in 1:l0) rect(xx[i], m3, xx[i + 1], w[i], col = col[i])
library(ade4)
data(friday87)
w1 <- data.frame(scale(friday87$fau, scal = FALSE))
w2 <- ktab.data.frame(w1, friday87$fau.blo, tabnames = friday87$tab.names)
mcoa1 <- mcoa(w2, "lambda1", scan = FALSE)
mcoa1
plot(mcoa1)
nf <- mcoa1$nf
eig.bottom = TRUE
opar <- par(mar = par("mar"))
on.exit(par(opar))
born <- par("usr")
w <- mcoa1$pseudoeig
col <- rep(grey(1), length(w))
col[1:nf] <- grey(0.8)
col[c(1:2)] <- grey(0)
l0 <- length(w)
xx <- seq(born[1], born[1] + (born[2] - born[1]) * l0/60,
le = l0 + 1)
w <- w/max(w)
w <- w * (born[4] - born[3])/4
par(mar = c(0.1, 0.1, 0.1, 0.1))
m3 <- born[3]
w <- m3 + w
rect(xx[1], m3, xx[l0 + 1], w[1], col = grey(1))
for (i in 1:l0) rect(xx[i], m3, xx[i + 1], w[i], col = col[i])
library(ade4)
data(friday87)
w1 <- data.frame(scale(friday87$fau, scal = FALSE))
w2 <- ktab.data.frame(w1, friday87$fau.blo, tabnames = friday87$tab.names)
mcoa1 <- mcoa(w2, "lambda1", scan = FALSE)
mcoa1
plot(mcoa1)
nf <- mcoa1$nf
eig.bottom = TRUE
opar <- par(mar = par("mar"))
on.exit(par(opar))
born <- par("usr")
w <- mcoa1$pseudoeig
col <- rep(grey(1), length(w))
col[1:nf] <- grey(0.8)
col[c(1:2)] <- grey(0)
l0 <- length(w)
xx <- seq(born[1], born[1] + (born[2] - born[1]) * l0/60,
le = l0 + 1)
w <- w/max(w)
w <- w * (born[4] - born[3])/4
par(mar = c(0.1, 0.2, 0.1, 0.1))
m3 <- born[3]
w <- m3 + w
rect(xx[1], m3, xx[l0 + 1], w[1], col = grey(1))
for (i in 1:l0) rect(xx[i], m3, xx[i + 1], w[i], col = col[i])
library(ade4)
data(friday87)
w1 <- data.frame(scale(friday87$fau, scal = FALSE))
w2 <- ktab.data.frame(w1, friday87$fau.blo, tabnames = friday87$tab.names)
mcoa1 <- mcoa(w2, "lambda1", scan = FALSE)
mcoa1
plot(mcoa1)
nf <- mcoa1$nf
eig.bottom = TRUE
opar <- par(mar = par("mar"))
on.exit(par(opar))
born <- par("usr")
w <- mcoa1$pseudoeig
col <- rep(grey(1), length(w))
col[1:nf] <- grey(0.8)
col[c(1:2)] <- grey(0)
l0 <- length(w)
xx <- seq(born[1], born[1] + (born[2] - born[1]) * l0/60,
le = l0 + 1)
w <- w/max(w)
w <- w * (born[4] - born[3])/4
par(mar = c(0.2, 0.2, 0.1, 0.1))
m3 <- born[3]
w <- m3 + w
rect(xx[1], m3, xx[l0 + 1], w[1], col = grey(1))
for (i in 1:l0) rect(xx[i], m3, xx[i + 1], w[i], col = col[i])
library(ade4)
data(friday87)
w1 <- data.frame(scale(friday87$fau, scal = FALSE))
w2 <- ktab.data.frame(w1, friday87$fau.blo, tabnames = friday87$tab.names)
mcoa1 <- mcoa(w2, "lambda1", scan = FALSE)
mcoa1
plot(mcoa1)
nf <- mcoa1$nf
eig.bottom = TRUE
opar <- par(mar = par("mar"))
on.exit(par(opar))
born <- par("usr")
w <- mcoa1$pseudoeig
col <- rep(grey(1), length(w))
col[1:nf] <- grey(0.8)
col[c(1:2)] <- grey(0)
l0 <- length(w)
xx <- seq(born[1], born[1] + (born[2] - born[1]) * l0/60,
le = l0 + 1)
w <- w/max(w)
w <- w * (born[4] - born[3])/4
par(mar = c(0.8, 0.8, 0.1, 0.1))
m3 <- born[3]
w <- m3 + w
rect(xx[1], m3, xx[l0 + 1], w[1], col = grey(1))
for (i in 1:l0) rect(xx[i], m3, xx[i + 1], w[i], col = col[i])
library(ade4)
data(friday87)
w1 <- data.frame(scale(friday87$fau, scal = FALSE))
w2 <- ktab.data.frame(w1, friday87$fau.blo, tabnames = friday87$tab.names)
mcoa1 <- mcoa(w2, "lambda1", scan = FALSE)
mcoa1
plot(mcoa1)
nf <- mcoa1$nf
eig.bottom = TRUE
opar <- par(mar = par("mar"))
on.exit(par(opar))
born <- par("usr")
w <- mcoa1$pseudoeig
col <- rep(grey(1), length(w))
col[1:nf] <- grey(0.8)
col[c(1:2)] <- grey(0)
l0 <- length(w)
xx <- seq(born[1], born[1] + (born[2] - born[1]) * l0/60,
le = l0 + 1)
w <- w/max(w)
w <- w * (born[4] - born[3])/4
par(mar = c(0.8, 0.8, 0.8, 0.8))
m3 <- born[3]
w <- m3 + w
rect(xx[1], m3, xx[l0 + 1], w[1], col = grey(1))
for (i in 1:l0) rect(xx[i], m3, xx[i + 1], w[i], col = col[i])
{if (eig.bottom)
m3 <- born[3]
else m3 <- born[4] - w[1]
}
library(ade4)
data(friday87)
w1 <- data.frame(scale(friday87$fau, scal = FALSE))
w2 <- ktab.data.frame(w1, friday87$fau.blo, tabnames = friday87$tab.names)
mcoa1 <- mcoa(w2, "lambda1", scan = FALSE)
mcoa1
plot(mcoa1)
nf <- mcoa1$nf
eig.bottom = TRUE
opar <- par(mar = par("mar"))
on.exit(par(opar))
born <- par("usr")
w <- mcoa1$pseudoeig
col <- rep(grey(1), length(w))
col[1:nf] <- grey(0.8)
col[c(1:2)] <- grey(0)
l0 <- length(w)
xx <- seq(born[1], born[1] + (born[2] - born[1]) * l0/60,
le = l0 + 1)
w <- w/max(w)
w <- w * (born[4] - born[3])/4
par(mar = c(0.8, 0.8, 0.8, 0.8))
{if (eig.bottom)
m3 <- born[3]
else m3 <- born[4] - w[1]
}
w <- m3 + w
rect(xx[1], m3, xx[l0 + 1], w[1], col = grey(1))
for (i in 1:l0) rect(xx[i], m3, xx[i + 1], w[i], col = col[i])
born[3]
w
xx
library(ade4)
data(friday87)
w1 <- data.frame(scale(friday87$fau, scal = FALSE))
w2 <- ktab.data.frame(w1, friday87$fau.blo, tabnames = friday87$tab.names)
mcoa1 <- mcoa(w2, "lambda1", scan = FALSE)
mcoa1
plot(mcoa1)
nf <- mcoa1$nf
eig.bottom = TRUE
opar <- par(mar = par("mar"))
on.exit(par(opar))
born <- par("usr")
w <- mcoa1$pseudoeig
col <- rep(grey(1), length(w))
col[1:nf] <- grey(0.8)
col[c(1:2)] <- grey(0)
l0 <- length(w)
xx <- seq(born[1], born[1] + (born[2] - born[1]) * l0/60,
le = l0 + 1)
w <- w/max(w)
w <- w * (born[4] - born[3])/4
par(mar = c(0.8, 0.8, 0.8, 0.8))
{if (eig.bottom)
m3 <- born[3]
else m3 <- born[4] - w[1]
}
w <- m3 + w
rect(xx[1], m3, xx[l0 + 1], w[1], col = grey(1))
for (i in 1:l0) rect(xx[i], m3, xx[i + 1], w[i], col = col[i])
W
W
w
library(ade4)
data(friday87)
w1 <- data.frame(scale(friday87$fau, scal = FALSE))
w2 <- ktab.data.frame(w1, friday87$fau.blo, tabnames = friday87$tab.names)
mcoa1 <- mcoa(w2, "lambda1", scan = FALSE)
mcoa1
plot(mcoa1)
nf <- mcoa1$nf
eig.bottom = TRUE
opar <- par(mar = par("mar"))
on.exit(par(opar))
born <- par("usr")
w <- mcoa1$pseudoeig
col <- rep(grey(1), length(w))
col[1:nf] <- grey(0.8)
col[c(1:2)] <- grey(0)
l0 <- length(w)
xx <- seq(born[1], born[1] + (born[2] - born[1]) * l0/60,
le = l0 + 1)
w <- w/max(w)
w <- w * (born[4] - born[3])/4
par(mar = c(0.8, 0.8, 0.8, 0.8))
{if (eig.bottom)
m3 <- born[3]
else m3 <- born[4] - w[1]
}
w <- m3 + w
rect(xx[1], m3, xx[l0 + 1], w[1], col = grey(1))
for (i in 1:l0) rect(xx[i], m3, xx[i + 1], w[i], col = col[i])
library(ade4)
data(friday87)
w1 <- data.frame(scale(friday87$fau, scal = FALSE))
w2 <- ktab.data.frame(w1, friday87$fau.blo, tabnames = friday87$tab.names)
mcoa1 <- mcoa(w2, "lambda1", scan = FALSE)
mcoa1
plot(mcoa1)
nf <- mcoa1$nf
eig.bottom = TRUE
opar <- par(mar = par("mar"))
on.exit(par(opar))
born <- par("usr")
w <- mcoa1$pseudoeig
col <- rep(grey(1), length(w))
col[1:nf] <- grey(0.8)
col[c(1:2)] <- grey(0)
l0 <- length(w)
xx <- seq(born[1], born[1] + (born[2] - born[1]) * l0/60,
le = l0 + 1)
w <- w/max(w)
w <- w * (born[4] - born[3])/4
par(mar = c(0.8, 0.8, 0.8, 0.8))
{if (eig.bottom)
m3 <- born[3]
else m3 <- born[4] - w[1]
}
w <- m3 + w
rect(xx[1], m3, xx[l0 + 1], w[1], col = grey(1))
for (i in 1:l0) rect(xx[i], m3, xx[i + 1], w[i], col = col[i])
rect(xx[1], m3, xx[1 + 1], w[1], col = col[1])
View(opar)
xx
a <- rect(xx[1], m3, xx[1 + 1], w[1], col = col[1])
pcoa_eig <- (mcoa1$pseudoeig)[1:2] / sum(mcoa1$pseudoeig)
pcoa_eig
pcoa_eig <- (mcoa1$pseudoeig)[1:20] / sum(mcoa1$pseudoeig)
pcoa_eig
barplot(pcoa_eig)
pcoa_eig <- (mcoa1$pseudoeig)[1:16] / sum(mcoa1$pseudoeig)
barplot(pcoa_eig)
library(ade4)
data(friday87)
w1 <- data.frame(scale(friday87$fau, scal = FALSE))
w2 <- ktab.data.frame(w1, friday87$fau.blo, tabnames = friday87$tab.names)
mcoa1 <- mcoa(w2, "lambda1", scan = FALSE)
mcoa1
plot(mcoa1)
library(picante)
picante -v
R.Version(picante)
R.Version("picante")
packageVersion('picante')
setwd("E:/陈沛霖-病原菌/宏转录/MS/code/Fig 2")
library(dplyr)
ko <- read.csv("AMS_TPM.csv",header = T,row.names = 1)
ko <- t(ko)
zg <- read.csv("Group_1.csv",header = T,row.names = 1)
zg <- subset(zg, zg$Group_common=="1")
zg <- subset(zg, zg$Compartment=="Root")
ko_c <- as.data.frame(ko[row.names(ko)%in%row.names(zg),])
ko_c1 <- data.frame(t(ko_c))
fungfun <- read.csv("ave_function1TPM.csv",header = T,row.names = 1)
ko_c1$ID1 <- row.names(ko_c1)
ko_c1$ID1 <- gsub("|", ".",ko_c1$ID1, fixed = TRUE)
row.names(ko_c1) <- ko_c1$ID1
ko_fun <- as.data.frame(ko_c1[row.names(ko_c1)%in%row.names(fungfun),])
fungfun$ID1 <- row.names(fungfun)
ko_fun <- left_join(ko_fun,fungfun[,c(2,67)],by='ID1')
ko_fun_ave <-aggregate(ko_fun[,c(1:196)],by=list(ko_fun$Group_1), sum)
row.names(ko_fun_ave) <- ko_fun_ave$Group.1
ko_fun_ave <- ko_fun_ave[,-1]
ko_fun_ave <- data.frame(t(ko_fun_ave))
ko_fun_ave$ID1 <- row.names(ko_fun_ave)
ko_fun_ave$ID1 <- gsub("_.+", "",ko_fun_ave$ID1)
otu <- read.csv("BacteriaFungi2019.07.10.csv",header = T,row.names = 1)
alpha_diversity <- function(x, tree = NULL) {
observed_KO <- rowSums(x>0)
Shannon_KO <- diversity(x, index = 'shannon',base = 2)
Simpson_KO <- diversity(x, index = 'simpson')    #注意，这里是Gini-Simpson 指数
#保留四位小数
Shannon_KO <- sprintf("%0.4f", Shannon_KO)
Simpson_KO <- sprintf("%0.4f", Simpson_KO)
result <- data.frame(observed_KO,Shannon_KO, Simpson_KO)
result
}
library(vegan)
library(ggplot2)
alpha <- alpha_diversity (ko_c)
alpha$ID1 <- row.names(alpha)
alpha$ID1   <- gsub("_quant", "",alpha$ID1, fixed = TRUE)
alpha$ID1   <- gsub("_unmaped", "",alpha$ID1, fixed = TRUE)
colnames(alpha)[1] <- 'AMF_gene_richness'
AMF_abu <- read.csv("AMS_otu_trans_rel_content.csv",header = T)
AMF_abu <- left_join(AMF_abu,alpha[,c(1,4)],by='ID1')
otu <- read.csv("BacteriaFungi2019.07.10.csv",header = T,row.names = 1)
otu <- data.frame(t(otu))
alpha_otu <- alpha_diversity (otu)
alpha_otu$ID1 <- row.names(alpha_otu)
alpha_otu$ID1   <- gsub("_quant", "",alpha_otu$ID1, fixed = TRUE)
alpha_otu$ID1   <- gsub("_unmaped", "",alpha_otu$ID1, fixed = TRUE)
colnames(alpha_otu)[1] <- 'AMF_OTU_richness'
AMF_abu <- left_join(AMF_abu,alpha_otu[,c(1,4)],by='ID1')
AMF_abu <- left_join(AMF_abu,ko_fun_ave,by='ID1')
AMF_abu <- subset(AMF_abu, AMF_abu$Week >= 9 )
AMF_abu_Block <-aggregate(AMF_abu[,c(5,11,13:22)],by=list(AMF_abu$Block), mean)
Trait <- read.csv("Growth_trait.csv",header = T,row.names = 1)
Trait <- Trait[,c(2,6,8,12)]
Trait$Group.1 <- row.names(Trait)
AMF_abu_trait_Block <- left_join(AMF_abu_Block,Trait,by='Group.1')
AMF_abu_trait_Block1 <- AMF_abu_trait_Block[,-c(1)]
library(psych)
a <- corr.test(AMF_abu_trait_Block1, method = "spearman", adjust = "fdr")
ad <- as.data.frame(a$r)
ap <- as.data.frame(a$p)
spman.r0 =a
Cor<-as.matrix(spman.r0$r)
P0<-as.matrix(spman.r0$p)
library(reshape2)
Cor <- melt(Cor)
P0 <- melt(P0)
df <- data.frame(Cor,  P0)
df1 <- subset(df, df$value.1 > 0.01 )
df2 <- subset(df, df$value.1 <= 0.01 )
df1$value <- 0
DF <- as.data.frame(rbind(df1,df2))
DF <- DF[,-c(4:6)]
DF <- dcast(DF, Var1 ~ Var2, value.var = "value")
row.names(DF) <- DF$Var1
DF <- DF[,-c(1,14:17)]
DF <- DF[(13:16),]
colnames(DF) <- c('AM fungal reads in RNA-seq%','AM fungal gene richness','AM fungal AAT expression','AM fungal AMT expression','AM fungal AQPF expression','AM fungal FAT expression','AM fungal MAPK expression','AM fungal Mating expression',  'AM fungal Pheromone expression','AM fungal PT expression','AM fungal Spore expression','AM fungal Sugar expression')
DF <- t(DF)
colnames(DF) <- c('Grain yield (lbs)','TWK (g)','Forage yield (lbs)','Height (m)')
library(pheatmap)
#pheatmap(DF,scale="none",cluster_cols=F,cluster_rows=F,angle_col = 315,fontsize_col = 12,fontsize_row = 12,cellwidth = 20, cellheight = 20,border='grey90', color = colorRampPalette(colors = c("white","blue","red"))(100),filename ="AMF_sorghum_trait_heatmap.pdf")
AMF_abu_trait_Block$plot <- AMF_abu_trait_Block$Group.1
AMF_abu_trait_Block$plot   <- gsub("Block ", "",AMF_abu_trait_Block$plot, fixed = TRUE)
AMF_abu_trait_Block$plot <- as.numeric(AMF_abu_trait_Block$plot)
zg1 <- zg[,c(10,2)]
zg1 <- unique(zg1)
AMF_abu_trait_Block_cor <- left_join(AMF_abu_trait_Block,zg1,by='plot')
AMF_abu_trait_Block_cor1 <- AMF_abu_trait_Block_cor[,c(2:7,9,12,16,19)]
colnames(AMF_abu_trait_Block_cor1) <- c('AM-fungi/All-fungi in RNA-seq','AM fungal gene richness','AM fungal AAT expression','AM fungal AMT expression','AM fungal AQPF expression','AM fungal FAT expression','AM fungal MAT expression','AM fungal SPS expression','Forage_yeild_lbs','Treat')
library(tidyverse)
AMF_abu_trait_Block_cor1 <- gather(AMF_abu_trait_Block_cor1,key = "AMF_type",
value = "AMF_content",
1:8)
AMF_abu_trait_Block_cor1$Treat <- factor(AMF_abu_trait_Block_cor1$Treat, levels=c("Control", "Preflowering", "Postflowering"),labels=c("Control", "Preflowering drought", "Postflowering drought"))
AMF_abu_trait_Block_cor1$AMF_type <- factor(AMF_abu_trait_Block_cor1$AMF_type,
levels=c('AM-fungi/All-fungi in RNA-seq','AM fungal gene richness','AM fungal AMT expression','AM fungal AQPF expression','AM fungal AAT expression','AM fungal FAT expression','AM fungal MAT expression','AM fungal SPS expression'))
p <- ggplot(AMF_abu_trait_Block_cor1,aes(as.numeric(AMF_content),as.numeric(Forage_yeild_lbs)))+
geom_point(aes(color=Treat), size = 5, alpha= 0.7)+geom_smooth(se=FALSE,size=0.5, method="lm",aes(),color='grey') +
ggsci::scale_fill_nejm() + ggpubr::stat_cor(aes(label = paste(..r.label..,..p.label.., sep = "~`,`~")),label.y = 235,size=6,fontface='bold') +
labs(x="AMF index",y = "Yield of sorghum forage (lbs)")+   scale_color_manual(values=c("black","blue","red")) +
theme_bw()+theme(strip.text = element_text(size = 12,face="bold"),
panel.spacing = unit(0, "lines"),
legend.title = element_text(colour="black", size=12, face="bold"),
legend.text = element_text(colour="black", size=8, face="bold"),
axis.text=element_text(size=8,face="bold"),
axis.title=element_text(size=12,face="bold"),legend.position = c(0.66,0.08))
p + facet_wrap(vars(AMF_type),nrow = 2,scales = "free_x")
ggsave("forage_AMF_cor.pdf",width = 12, height =8)
AMF_abu_trait_Block_cor2 <- AMF_abu_trait_Block_cor[,c(2:7,9,12,14,19)]
colnames(AMF_abu_trait_Block_cor2) <- c('AM-fungi/All-fungi in RNA-seq','AM fungal gene richness','AM fungal AAT expression','AM fungal AMT expression','AM fungal AQPF expression','AM fungal FAT expression','AM fungal MAT expression','AM fungal SPS expression','Grain_yeild_lbs','Treat')
library(tidyverse)
AMF_abu_trait_Block_cor2 <- gather(AMF_abu_trait_Block_cor2,key = "AMF_type",
value = "AMF_content",
1:8)
AMF_abu_trait_Block_cor2$Treat <- factor(AMF_abu_trait_Block_cor2$Treat, levels=c("Control", "Preflowering", "Postflowering"),labels=c("Control", "Preflowering drought", "Postflowering drought"))
AMF_abu_trait_Block_cor2$AMF_type <- factor(AMF_abu_trait_Block_cor2$AMF_type,
levels=c('AM-fungi/All-fungi in RNA-seq','AM fungal gene richness','AM fungal AMT expression','AM fungal AQPF expression','AM fungal AAT expression','AM fungal FAT expression','AM fungal MAT expression','AM fungal SPS expression'))
p <- ggplot(AMF_abu_trait_Block_cor2,aes(as.numeric(AMF_content),as.numeric(Grain_yeild_lbs)))+
geom_point(aes(color=Treat), size = 5, alpha= 0.7)+geom_smooth(se=FALSE,size=0.5, method="lm",aes(),color='grey') +
ggsci::scale_fill_nejm() + ggpubr::stat_cor(aes(label = paste(..r.label..,..p.label.., sep = "~`,`~")),label.y = 27,size=6,fontface='bold') +
labs(x="AMF index",y = "Yield of sorghum grain (lbs)")+   scale_color_manual(values=c("black","blue","red")) +
theme_bw()+theme(strip.text = element_text(size = 12,face="bold"),
panel.spacing = unit(0, "lines"),
legend.title = element_text(colour="black", size=12, face="bold"),
legend.text = element_text(colour="black", size=8, face="bold"),
axis.text=element_text(size=8,face="bold"),
axis.title=element_text(size=12,face="bold"),legend.position = c(0.66,0.08))
p + facet_wrap(vars(AMF_type),nrow = 2,scales = "free_x")
ggsave("grain_AMF_cor.pdf",width = 12, height =8)
AMF_abu_trait_Block_cor3 <- AMF_abu_trait_Block_cor[,c(2:7,9,12,17,19)]
colnames(AMF_abu_trait_Block_cor3) <- c('AM-fungi/All-fungi in RNA-seq','AM fungal gene richness','AM fungal AAT expression','AM fungal AMT expression','AM fungal AQPF expression','AM fungal FAT expression','AM fungal MAT expression','AM fungal SPS expression','Sorghum_height','Treat')
library(tidyverse)
AMF_abu_trait_Block_cor3 <- gather(AMF_abu_trait_Block_cor3,key = "AMF_type",
value = "AMF_content",
1:8)
AMF_abu_trait_Block_cor3$Treat <- factor(AMF_abu_trait_Block_cor3$Treat, levels=c("Control", "Preflowering", "Postflowering"),labels=c("Control", "Preflowering drought", "Postflowering drought"))
AMF_abu_trait_Block_cor3$AMF_type <- factor(AMF_abu_trait_Block_cor3$AMF_type,
levels=c('AM-fungi/All-fungi in RNA-seq','AM fungal gene richness','AM fungal AMT expression','AM fungal AQPF expression','AM fungal AAT expression','AM fungal FAT expression','AM fungal MAT expression','AM fungal SPS expression'))
p <- ggplot(AMF_abu_trait_Block_cor3,aes(as.numeric(AMF_content),as.numeric(Sorghum_height)))+
geom_point(aes(color=Treat), size = 5, alpha= 0.7)+geom_smooth(se=FALSE,size=0.5, method="lm",aes(),color='grey') +
ggsci::scale_fill_nejm() + ggpubr::stat_cor(aes(label = paste(..r.label..,..p.label.., sep = "~`,`~")),label.y = 135,size=6,fontface='bold') +
labs(x="AMF index",y = "Sorghum height (cm)")+   scale_color_manual(values=c("black","blue","red")) +
theme_bw()+theme(strip.text = element_text(size = 12,face="bold"),
panel.spacing = unit(0, "lines"),
legend.title = element_text(colour="black", size=12, face="bold"),
legend.text = element_text(colour="black", size=8, face="bold"),
axis.text=element_text(size=8,face="bold"),
axis.title=element_text(size=12,face="bold"),legend.position = c(0.66,0.08))
p + facet_wrap(vars(AMF_type),nrow = 2,scales = "free_x")
ggsave("Sorghum_height_AMF_cor.pdf",width = 12, height =8)
AMF_abu_trait_Block_cor4 <- AMF_abu_trait_Block_cor[,c(2:7,9,12,15,19)]
colnames(AMF_abu_trait_Block_cor4) <- c('AM-fungi/All-fungi in RNA-seq','AM fungal gene richness','AM fungal AAT expression','AM fungal AMT expression','AM fungal AQPF expression','AM fungal FAT expression','AM fungal MAT expression','AM fungal SPS expression','TWK','Treat')
library(tidyverse)
AMF_abu_trait_Block_cor4 <- gather(AMF_abu_trait_Block_cor4,key = "AMF_type",
value = "AMF_content",
1:8)
AMF_abu_trait_Block_cor4$Treat <- factor(AMF_abu_trait_Block_cor4$Treat, levels=c("Control", "Preflowering", "Postflowering"),labels=c("Control", "Preflowering drought", "Postflowering drought"))
AMF_abu_trait_Block_cor4$AMF_type <- factor(AMF_abu_trait_Block_cor4$AMF_type,
levels=c('AM-fungi/All-fungi in RNA-seq','AM fungal gene richness','AM fungal AMT expression','AM fungal AQPF expression','AM fungal AAT expression','AM fungal FAT expression','AM fungal MAT expression','AM fungal SPS expression'))
p <- ggplot(AMF_abu_trait_Block_cor4,aes(as.numeric(AMF_content),as.numeric(TWK)))+
geom_point(aes(color=Treat), size = 5, alpha= 0.7)+geom_smooth(se=FALSE,size=0.5, method="lm",aes(),color='grey') +
ggsci::scale_fill_nejm() + ggpubr::stat_cor(aes(label = paste(..r.label..,..p.label.., sep = "~`,`~")),label.y = 39,size=6,fontface='bold') +
labs(x="AMF index",y = "Weight of 1000-sorghum seeds (g)")+   scale_color_manual(values=c("black","blue","red")) +
theme_bw()+theme(strip.text = element_text(size = 12,face="bold"),
panel.spacing = unit(0, "lines"),
legend.title = element_text(colour="black", size=12, face="bold"),
legend.text = element_text(colour="black", size=8, face="bold"),
axis.text=element_text(size=8,face="bold"),
axis.title=element_text(size=12,face="bold"),legend.position = c(0.66,0.08))
p + facet_wrap(vars(AMF_type),nrow = 2,scales = "free_x")
ggsave("Sorghum_TWK_AMF_cor.pdf",width = 12, height =8)

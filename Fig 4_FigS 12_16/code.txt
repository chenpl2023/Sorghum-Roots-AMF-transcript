#network Fig 4a  & Supplementary Fig. 12
gene <- read.csv("DE_Soil_AMS_bac_10.csv",header = T,row.names = 1)
gene <- t(gene)
library(psych)
library(igraph)
 #otu_niche为行为sample，列为OTU的OTU table
fast_spearman_fdr <- function(otu_niche){
  r <- cor(otu_niche,method="spearman")
  n = nrow(otu_niche)
  t <- (r * sqrt(n - 2))/sqrt(1 - r^2)
  p <- -2 * expm1(pt(abs(t), (n - 2), log.p = TRUE))
  p[upper.tri(p, diag = FALSE)] <- p.adjust(p[upper.tri(p,diag = FALSE)], "fdr")
  p[lower.tri(p, diag = FALSE)] = t(p)[lower.tri(p, diag = FALSE)]
  return(list(r=r,p=p))
}
res <- fast_spearman_fdr(gene)
spman.r0 =res
Cor<-as.matrix(spman.r0$r)
Cor.df<-data.frame(row=rownames(Cor)[row(Cor)[upper.tri(Cor)]], 
                   col=colnames(Cor)[col(Cor)[upper.tri(Cor)]], Cor=Cor[upper.tri(Cor)])

P0<-as.matrix(spman.r0$p)
P.df<-data.frame(row=rownames(P0)[row(P0)[upper.tri(P0)]], 
                 col=colnames(P0)[col(P0)[upper.tri(P0)]], p=P0[upper.tri(P0)])

r.cutoff = 0.70
p.cutoff = 0.01
df <- data.frame(Cor.df,  P.df)
da.tmp<-df.sig<-df[abs(df$Cor) >r.cutoff & df$p <p.cutoff,]
da.tmp<-na.omit(da.tmp)
V1<-data.frame("v1"=da.tmp$row); V2<-data.frame("v2"=da.tmp$col)

ID.tmp <- read.csv("ID.csv",header = T)
IDsub1<-ID.tmp[ID.tmp$Category %in% V1$v1, ]; IDsub2<-ID.tmp[ID.tmp$Category %in% V2$v2, ]
V1$id  <- 1:nrow(V1); V2$id  <- 1:nrow(V2)
M1<-merge(V1, IDsub1, by.x = "v1", by.y = "Category", all.x= T); M1<-M1[order(M1$id), ]
M2<-merge(V2, IDsub2, by.x = "v2", by.y = "Category", all.x = T); M2<-M2[order(M2$id), ]
da<-data.frame(da.tmp, M1, M2)
da_between = da %>% filter((Description=="AMF" & Description.1=="SORG")|(Description=="SORG" & Description.1=="AMF"))

ko.mgm.ID0 <- read.csv("ID.csv",header = T)
g <- graph.data.frame(da_between, directed=FALSE)
fun.fc<-cluster_fast_greedy(g)
#print(modularity(fun.fc))
modularity(fun.fc,membership(fun.fc))
#membership(fun.fc)
ko.modu.memb <- data.frame(c(membership(fun.fc) ))
ko.modu.memb <-data.frame("KO"= row.names(ko.modu.memb), "Modular"= ko.modu.memb$c.membership.fun.fc..)
ko.sub<-ko.mgm.ID0 [ko.mgm.ID0$Category%in% ko.modu.memb$KO,]
ko.modu.memb.ID<-merge(ko.modu.memb, ko.sub, by.x = "KO", by.y = "Category", all = T)
saveRDS(ko.modu.memb.ID, paste0("ko.modu.memb.ID.RDS"))
print(sizes(fun.fc))
fun.comps <- membership(fun.fc)

#Fig 4b
library(ggvenn)
## 载入需要的程辑包：grid
library(patchwork)
venn <- read.csv("Overlap_gene.csv",header=T)
a1 <- list(`AMF gene in Module` = venn$Module_all,
          `AMF induced gene` = venn$AMF_induced_gene)

P1 <- ggvenn(a1, show_elements = FALSE,fill_color = c("blue", "tan4"),
       label_sep = "\n", stroke_size = 0.7,set_name_size = 3,
       text_size = 3, show_percentage = FALSE, fill_alpha=0.6)
## Warning: There was 1 warning in `mutate()`.
## ℹ In argument: `text = sprintf("%d", n, 100 * n/sum(n))`.
## Caused by warning in `sprintf()`:
## ! one argument not used by format '%d'
ggsave("Overlap_gene_Venn.pdf",width = 4, height =4)

#Fig 4c & Supplementary Fig. 13-16
library(dplyr)
sig.tab_ALL <- read.csv("Module1_Sorg_GO.csv",header=T)
sig.tab_ALL_0.01 = sig.tab_ALL %>% filter(FDR<0.01)
library(ggplot2)
library(stringr)
sig.tab_ALL_0.01$FDR <- as.numeric(sig.tab_ALL_0.01$FDR)
sig.tab_ALL_0.01$Description <-  str_to_sentence(sig.tab_ALL_0.01$Description)#首字母大写

sig.tab_ALL_0.01$Description <- factor(as.integer(rownames(sig.tab_ALL_0.01)),labels=sig.tab_ALL_0.01$Description)
col_function <- function(x){
  col <- rep('black', length(x))
  one <- which(x %in% c('P'))
  two <- which(x %in% c('F'))
  three <- which(x %in% c('C'))
  col[one] <- '#0074b3'
  col[two] <- '#f47720'
  col[three] <- '#459943'
  col
}

y_text_color <- col_function(sig.tab_ALL_0.01$Ontology)

ggplot(sig.tab_ALL_0.01,aes(Richfactor,Description))+geom_point(aes(size=Number.of.genes,color=-log10(FDR)))+scale_color_gradient(high="red",low = "blue")+
  theme_test(base_size = 14,base_rect_size = 1)+labs(x="Enrich Factor",y="", title="Sorghum-module1 GO enrichment")+
  scale_y_discrete(labels = c(sig.tab_ALL_0.01$Description))+guides(size=guide_legend(title = "Gene number"))+
  theme(axis.text.y = element_text(color = (y_text_color)),panel.grid.major=element_line(colour="gray85",linetype = "dashed"),legend.position =  "bottom",legend.box = "vertical")
ggsave("Sorghum-module1 GO enrichment.pdf",width = 8, height =8)

library(dplyr)
sig.tab_ALL <- read.csv("Module3_Sorg_GO.csv",header=T)
sig.tab_ALL_0.01 = sig.tab_ALL %>% filter(FDR<0.01)
library(ggplot2)
library(stringr)
sig.tab_ALL_0.01$FDR <- as.numeric(sig.tab_ALL_0.01$FDR)
sig.tab_ALL_0.01$Description <-  str_to_sentence(sig.tab_ALL_0.01$Description)#首字母大写

sig.tab_ALL_0.01$Description <- factor(as.integer(rownames(sig.tab_ALL_0.01)),labels=sig.tab_ALL_0.01$Description)
col_function <- function(x){
  col <- rep('black', length(x))
  one <- which(x %in% c('P'))
  two <- which(x %in% c('F'))
  three <- which(x %in% c('C'))
  col[one] <- '#0074b3'
  col[two] <- '#f47720'
  col[three] <- '#459943'
  col
}

y_text_color <- col_function(sig.tab_ALL_0.01$Ontology)

ggplot(sig.tab_ALL_0.01,aes(Richfactor,Description))+geom_point(aes(size=Number.of.genes,color=-log10(FDR)))+scale_color_gradient(high="red",low = "blue")+
  theme_test(base_size = 14,base_rect_size = 1)+labs(x="Enrich Factor",y="", title="Sorghum-module3 GO enrichment")+
  scale_y_discrete(labels = c(sig.tab_ALL_0.01$Description))+guides(size=guide_legend(title = "Gene number"))+
  theme(axis.text.y = element_text(color = (y_text_color)),panel.grid.major=element_line(colour="gray85",linetype = "dashed"),legend.position =  "bottom",legend.box = "vertical")
ggsave("Sorghum-module3 GO enrichment.pdf",width = 8, height =8)

library(dplyr)
sig.tab_ALL <- read.csv("Module4_Sorg_GO.csv",header=T)
sig.tab_ALL_0.01 = sig.tab_ALL %>% filter(FDR<0.01)
library(ggplot2)
library(stringr)
sig.tab_ALL_0.01$FDR <- as.numeric(sig.tab_ALL_0.01$FDR)
sig.tab_ALL_0.01$Description <-  str_to_sentence(sig.tab_ALL_0.01$Description)#首字母大写

sig.tab_ALL_0.01$Description <- factor(as.integer(rownames(sig.tab_ALL_0.01)),labels=sig.tab_ALL_0.01$Description)
col_function <- function(x){
  col <- rep('black', length(x))
  one <- which(x %in% c('P'))
  two <- which(x %in% c('F'))
  three <- which(x %in% c('C'))
  col[one] <- '#0074b3'
  col[two] <- '#f47720'
  col[three] <- '#459943'
  col
}

y_text_color <- col_function(sig.tab_ALL_0.01$Ontology)

ggplot(sig.tab_ALL_0.01,aes(Richfactor,Description))+geom_point(aes(size=Number.of.genes,color=-log10(FDR)))+scale_color_gradient(high="red",low = "blue")+
  theme_test(base_size = 14,base_rect_size = 1)+labs(x="Enrich Factor",y="", title="Sorghum-module4 GO enrichment")+
  scale_y_discrete(labels = c(sig.tab_ALL_0.01$Description))+guides(size=guide_legend(title = "Gene number"))+
  theme(axis.text.y = element_text(color = (y_text_color)),panel.grid.major=element_line(colour="gray85",linetype = "dashed"),legend.position =  "bottom",legend.box = "vertical")
ggsave("Sorghum-module4 GO enrichment.pdf",width = 8, height =8)

library(dplyr)
sig.tab_ALL <- read.csv("All Bac GO enrichment.csv",header=T)
sig.tab_ALL_0.01 = sig.tab_ALL %>% filter(FDR<0.01)
library(ggplot2)
library(stringr)
sig.tab_ALL_0.01$FDR <- as.numeric(sig.tab_ALL_0.01$FDR)
sig.tab_ALL_0.01$Description <-  str_to_sentence(sig.tab_ALL_0.01$Description)#首字母大写

sig.tab_ALL_0.01$Description <- factor(as.integer(rownames(sig.tab_ALL_0.01)),labels=sig.tab_ALL_0.01$Description)
col_function <- function(x){
  col <- rep('black', length(x))
  one <- which(x %in% c('P'))
  two <- which(x %in% c('F'))
  three <- which(x %in% c('C'))
  col[one] <- '#0074b3'
  col[two] <- '#f47720'
  col[three] <- '#459943'
  col
}

y_text_color <- col_function(sig.tab_ALL_0.01$Ontology)

ggplot(sig.tab_ALL_0.01,aes(Richfactor,Description))+geom_point(aes(size=Number.of.genes,color=-log10(FDR)))+scale_color_gradient(high="red",low = "blue")+
  theme_test(base_size = 14,base_rect_size = 1)+labs(x="Enrich Factor",y="", title="Sorghum-all module GO enrichment")+
  scale_y_discrete(labels = c(sig.tab_ALL_0.01$Description))+guides(size=guide_legend(title = "Gene number"))+
  theme(axis.text.y = element_text(color = (y_text_color)),panel.grid.major=element_line(colour="gray85",linetype = "dashed"),legend.position =  "bottom",legend.box = "vertical")
ggsave("Sorghum-all module GO enrichment.pdf",width = 8, height =8)

#Fig 4d & Supplementary Fig. 13-16
setwd("E:/陈沛霖-病原菌/宏转录/AMS/NET/Between_sorg_amf/pos&neg_0.7")
library(topGO)
library(stringr)
gene2GO_map<-readMappings("Root_AMF_GOmap.map")
res<-read.csv("AMF_gene.csv",header=T)
genelist<-res$Modall
names(genelist)<-res$gene_id
genelist <- as.factor(genelist)

Godata_BP<-new("topGOdata",ontology = "BP",allGenes=genelist,annot=annFUN.gene2GO,gene2GO=gene2GO_map,nodeSize = 10)
resultFis_BP<-runTest(Godata_BP,algorithm = "classic",statistic = "fisher")
sig.tab_BP <- GenTable(Godata_BP,Fis = resultFis_BP)
sig.tab_BP['Ontology'] <- 'BP'

Godata_MF<-new("topGOdata",ontology = "MF",allGenes=genelist,annot=annFUN.gene2GO,gene2GO=gene2GO_map,nodeSize = 10)
resultFis_MF<-runTest(Godata_MF,algorithm = "classic",statistic = "fisher")
sig.tab_MF <- GenTable(Godata_MF,Fis = resultFis_MF)
sig.tab_MF['Ontology'] <- 'MF'

Godata_CC<-new("topGOdata",ontology = "CC",allGenes=genelist,annot=annFUN.gene2GO,gene2GO=gene2GO_map,nodeSize = 10)
resultFis_CC<-runTest(Godata_CC,algorithm = "classic",statistic = "fisher")
sig.tab_CC <- GenTable(Godata_CC,Fis = resultFis_CC)
sig.tab_CC['Ontology'] <- 'CC'

sig.tab_ALL <- rbind(sig.tab_BP,sig.tab_MF,sig.tab_CC)
sig.tab_ALL$Fis <- as.numeric(sig.tab_ALL$Fis)

library(reshape2)
library(dplyr)
library(ggrepel)
sig.tab_ALL_0.01 = sig.tab_ALL %>% filter(Fis<0.01)
library(ggplot2)
sig.tab_ALL_0.01$Fis <- as.numeric(sig.tab_ALL_0.01$Fis)
sig.tab_ALL_0.01$bi <- sig.tab_ALL_0.01$Significant/sig.tab_ALL_0.01$Annotated

sig.tab_ALL_0.01$Term <-  str_to_sentence(sig.tab_ALL_0.01$Term)#首字母大写

sig.tab_ALL_0.01$Term <- factor(as.integer(rownames(sig.tab_ALL_0.01)),labels=sig.tab_ALL_0.01$Term)
write.csv(sig.tab_ALL_0.01,"All AMF GO enrichment.csv")

genelist<-res$Mod1
names(genelist)<-res$gene_id
genelist <- as.factor(genelist)

Godata_BP<-new("topGOdata",ontology = "BP",allGenes=genelist,annot=annFUN.gene2GO,gene2GO=gene2GO_map,nodeSize = 10)
resultFis_BP<-runTest(Godata_BP,algorithm = "classic",statistic = "fisher")
sig.tab_BP <- GenTable(Godata_BP,Fis = resultFis_BP)
sig.tab_BP['Ontology'] <- 'BP'

Godata_MF<-new("topGOdata",ontology = "MF",allGenes=genelist,annot=annFUN.gene2GO,gene2GO=gene2GO_map,nodeSize = 10)
resultFis_MF<-runTest(Godata_MF,algorithm = "classic",statistic = "fisher")
sig.tab_MF <- GenTable(Godata_MF,Fis = resultFis_MF)
sig.tab_MF['Ontology'] <- 'MF'

Godata_CC<-new("topGOdata",ontology = "CC",allGenes=genelist,annot=annFUN.gene2GO,gene2GO=gene2GO_map,nodeSize = 10)
resultFis_CC<-runTest(Godata_CC,algorithm = "classic",statistic = "fisher")
sig.tab_CC <- GenTable(Godata_CC,Fis = resultFis_CC)
sig.tab_CC['Ontology'] <- 'CC'

sig.tab_ALL <- rbind(sig.tab_BP,sig.tab_MF,sig.tab_CC)
sig.tab_ALL$Fis <- as.numeric(sig.tab_ALL$Fis)

library(reshape2)
library(dplyr)
library(ggrepel)
sig.tab_ALL_0.01 = sig.tab_ALL %>% filter(Fis<0.01)
library(ggplot2)
sig.tab_ALL_0.01$Fis <- as.numeric(sig.tab_ALL_0.01$Fis)
sig.tab_ALL_0.01$bi <- sig.tab_ALL_0.01$Significant/sig.tab_ALL_0.01$Annotated

sig.tab_ALL_0.01$Term <-  str_to_sentence(sig.tab_ALL_0.01$Term)#首字母大写

sig.tab_ALL_0.01$Term <- factor(as.integer(rownames(sig.tab_ALL_0.01)),labels=sig.tab_ALL_0.01$Term)

write.csv(sig.tab_ALL_0.01,"Module1 AMF GO enrichment.csv")

genelist<-res$Mod4
names(genelist)<-res$gene_id
genelist <- as.factor(genelist)

Godata_BP<-new("topGOdata",ontology = "BP",allGenes=genelist,annot=annFUN.gene2GO,gene2GO=gene2GO_map,nodeSize = 10)
resultFis_BP<-runTest(Godata_BP,algorithm = "classic",statistic = "fisher")
sig.tab_BP <- GenTable(Godata_BP,Fis = resultFis_BP)
sig.tab_BP['Ontology'] <- 'BP'

Godata_MF<-new("topGOdata",ontology = "MF",allGenes=genelist,annot=annFUN.gene2GO,gene2GO=gene2GO_map,nodeSize = 10)
resultFis_MF<-runTest(Godata_MF,algorithm = "classic",statistic = "fisher")
sig.tab_MF <- GenTable(Godata_MF,Fis = resultFis_MF)
sig.tab_MF['Ontology'] <- 'MF'

Godata_CC<-new("topGOdata",ontology = "CC",allGenes=genelist,annot=annFUN.gene2GO,gene2GO=gene2GO_map,nodeSize = 10)
resultFis_CC<-runTest(Godata_CC,algorithm = "classic",statistic = "fisher")
sig.tab_CC <- GenTable(Godata_CC,Fis = resultFis_CC)
sig.tab_CC['Ontology'] <- 'CC'

sig.tab_ALL <- rbind(sig.tab_BP,sig.tab_MF,sig.tab_CC)
sig.tab_ALL$Fis <- as.numeric(sig.tab_ALL$Fis)

library(reshape2)
library(dplyr)
library(ggrepel)
sig.tab_ALL_0.01 = sig.tab_ALL %>% filter(Fis<0.01)
library(ggplot2)
sig.tab_ALL_0.01$Fis <- as.numeric(sig.tab_ALL_0.01$Fis)
sig.tab_ALL_0.01$bi <- sig.tab_ALL_0.01$Significant/sig.tab_ALL_0.01$Annotated

sig.tab_ALL_0.01$Term <-  str_to_sentence(sig.tab_ALL_0.01$Term)#首字母大写

sig.tab_ALL_0.01$Term <- factor(as.integer(rownames(sig.tab_ALL_0.01)),labels=sig.tab_ALL_0.01$Term)
write.csv(sig.tab_ALL_0.01,"Module4 AMF GO enrichment.csv")


genelist<-res$Mod3
names(genelist)<-res$gene_id
genelist <- as.factor(genelist)

Godata_BP<-new("topGOdata",ontology = "BP",allGenes=genelist,annot=annFUN.gene2GO,gene2GO=gene2GO_map,nodeSize = 10)
resultFis_BP<-runTest(Godata_BP,algorithm = "classic",statistic = "fisher")
sig.tab_BP <- GenTable(Godata_BP,Fis = resultFis_BP)
sig.tab_BP['Ontology'] <- 'BP'

Godata_MF<-new("topGOdata",ontology = "MF",allGenes=genelist,annot=annFUN.gene2GO,gene2GO=gene2GO_map,nodeSize = 10)
resultFis_MF<-runTest(Godata_MF,algorithm = "classic",statistic = "fisher")
sig.tab_MF <- GenTable(Godata_MF,Fis = resultFis_MF)
sig.tab_MF['Ontology'] <- 'MF'

Godata_CC<-new("topGOdata",ontology = "CC",allGenes=genelist,annot=annFUN.gene2GO,gene2GO=gene2GO_map,nodeSize = 10)
resultFis_CC<-runTest(Godata_CC,algorithm = "classic",statistic = "fisher")
sig.tab_CC <- GenTable(Godata_CC,Fis = resultFis_CC)
sig.tab_CC['Ontology'] <- 'CC'

sig.tab_ALL <- rbind(sig.tab_BP,sig.tab_MF,sig.tab_CC)
sig.tab_ALL$Fis <- as.numeric(sig.tab_ALL$Fis)

library(reshape2)
library(dplyr)
library(ggrepel)
sig.tab_ALL_0.01 = sig.tab_ALL %>% filter(Fis<0.01)
library(ggplot2)
sig.tab_ALL_0.01$Fis <- as.numeric(sig.tab_ALL_0.01$Fis)
sig.tab_ALL_0.01$bi <- sig.tab_ALL_0.01$Significant/sig.tab_ALL_0.01$Annotated

sig.tab_ALL_0.01$Term <-  str_to_sentence(sig.tab_ALL_0.01$Term)#首字母大写

sig.tab_ALL_0.01$Term <- factor(as.integer(rownames(sig.tab_ALL_0.01)),labels=sig.tab_ALL_0.01$Term)
write.csv(sig.tab_ALL_0.01,"Module3 AMF GO enrichment.csv")
setwd("E:/陈沛霖-病原菌/宏转录/AMS/NET/Between_sorg_amf/pos&neg_0.7")
library(dplyr)
sig.tab_ALL <- read.csv("All AMF GO enrichment.csv",header=T)
sig.tab_ALL_0.01 = sig.tab_ALL %>% filter(FDR<0.01)
library(ggplot2)
library(stringr)
sig.tab_ALL_0.01$FDR <- as.numeric(sig.tab_ALL_0.01$FDR)
sig.tab_ALL_0.01$Description <-  str_to_sentence(sig.tab_ALL_0.01$Description)#首字母大写

sig.tab_ALL_0.01$Description <- factor(as.integer(rownames(sig.tab_ALL_0.01)),labels=sig.tab_ALL_0.01$Description)
col_function <- function(x){
  col <- rep('black', length(x))
  one <- which(x %in% c('BP'))
  two <- which(x %in% c('MF'))
  three <- which(x %in% c('CC'))
  col[one] <- '#0074b3'
  col[two] <- '#f47720'
  col[three] <- '#459943'
  col
}

y_text_color <- col_function(sig.tab_ALL_0.01$Ontology)

ggplot(sig.tab_ALL_0.01,aes(Richfactor,Description))+geom_point(aes(size=Significant,color=-log10(FDR)))+scale_color_gradient(high="red",low = "blue")+
  theme_test(base_size = 14,base_rect_size = 1)+labs(x="Enrich Factor",y="", title="AMF-all module GO enrichment")+
  scale_y_discrete(labels = c(sig.tab_ALL_0.01$Description))+guides(size=guide_legend(title = "Gene number"))+
  theme(axis.text.y = element_text(color = (y_text_color)),panel.grid.major=element_line(colour="gray85",linetype = "dashed"),legend.position =  "bottom",legend.box = "vertical")

ggsave("AMF-all module GO enrichment.pdf",width = 8, height =8)

library(dplyr)
sig.tab_ALL <- read.csv("Module1 AMF GO enrichment.csv",header=T)
sig.tab_ALL_0.01 = sig.tab_ALL %>% filter(FDR<0.01)
library(ggplot2)
library(stringr)
sig.tab_ALL_0.01$FDR <- as.numeric(sig.tab_ALL_0.01$FDR)
sig.tab_ALL_0.01$Description <-  str_to_sentence(sig.tab_ALL_0.01$Description)#首字母大写

sig.tab_ALL_0.01$Description <- factor(as.integer(rownames(sig.tab_ALL_0.01)),labels=sig.tab_ALL_0.01$Description)
col_function <- function(x){
  col <- rep('black', length(x))
  one <- which(x %in% c('BP'))
  two <- which(x %in% c('MF'))
  three <- which(x %in% c('CC'))
  col[one] <- '#0074b3'
  col[two] <- '#f47720'
  col[three] <- '#459943'
  col
}

y_text_color <- col_function(sig.tab_ALL_0.01$Ontology)

ggplot(sig.tab_ALL_0.01,aes(Richfactor,Description))+geom_point(aes(size=Significant,color=-log10(FDR)))+scale_color_gradient(high="red",low = "blue")+
  theme_test(base_size = 14,base_rect_size = 1)+labs(x="Enrich Factor",y="", title="AMF-module1 GO enrichment")+
  scale_y_discrete(labels = c(sig.tab_ALL_0.01$Description))+guides(size=guide_legend(title = "Gene number"))+
  theme(axis.text.y = element_text(color = (y_text_color)),panel.grid.major=element_line(colour="gray85",linetype = "dashed"),legend.position =  "bottom",legend.box = "vertical")

ggsave("AMF-module1 GO enrichment.pdf",width = 8, height =8)

library(dplyr)
sig.tab_ALL <- read.csv("Module3 AMF GO enrichment.csv",header=T)
sig.tab_ALL_0.01 = sig.tab_ALL %>% filter(FDR<0.01)
library(ggplot2)
library(stringr)
sig.tab_ALL_0.01$FDR <- as.numeric(sig.tab_ALL_0.01$FDR)
sig.tab_ALL_0.01$Description <-  str_to_sentence(sig.tab_ALL_0.01$Description)#首字母大写

sig.tab_ALL_0.01$Description <- factor(as.integer(rownames(sig.tab_ALL_0.01)),labels=sig.tab_ALL_0.01$Description)
col_function <- function(x){
  col <- rep('black', length(x))
  one <- which(x %in% c('BP'))
  two <- which(x %in% c('MF'))
  three <- which(x %in% c('CC'))
  col[one] <- '#0074b3'
  col[two] <- '#f47720'
  col[three] <- '#459943'
  col
}

y_text_color <- col_function(sig.tab_ALL_0.01$Ontology)

ggplot(sig.tab_ALL_0.01,aes(Richfactor,Description))+geom_point(aes(size=Significant,color=-log10(FDR)))+scale_color_gradient(high="red",low = "blue")+
  theme_test(base_size = 14,base_rect_size = 1)+labs(x="Enrich Factor",y="", title="AMF-module3 GO enrichment")+
  scale_y_discrete(labels = c(sig.tab_ALL_0.01$Description))+guides(size=guide_legend(title = "Gene number"))+
  theme(axis.text.y = element_text(color = (y_text_color)),panel.grid.major=element_line(colour="gray85",linetype = "dashed"),legend.position =  "bottom",legend.box = "vertical")

ggsave("AMF-module3 GO enrichment.pdf",width = 8, height =8)

library(dplyr)
sig.tab_ALL <- read.csv("Module4 AMF GO enrichment.csv",header=T)
sig.tab_ALL_0.01 = sig.tab_ALL %>% filter(FDR<0.01)
library(ggplot2)
library(stringr)
sig.tab_ALL_0.01$FDR <- as.numeric(sig.tab_ALL_0.01$FDR)
sig.tab_ALL_0.01$Description <-  str_to_sentence(sig.tab_ALL_0.01$Description)#首字母大写

sig.tab_ALL_0.01$Description <- factor(as.integer(rownames(sig.tab_ALL_0.01)),labels=sig.tab_ALL_0.01$Description)
col_function <- function(x){
  col <- rep('black', length(x))
  one <- which(x %in% c('BP'))
  two <- which(x %in% c('MF'))
  three <- which(x %in% c('CC'))
  col[one] <- '#0074b3'
  col[two] <- '#f47720'
  col[three] <- '#459943'
  col
}

y_text_color <- col_function(sig.tab_ALL_0.01$Ontology)

ggplot(sig.tab_ALL_0.01,aes(Richfactor,Description))+geom_point(aes(size=Significant,color=-log10(FDR)))+scale_color_gradient(high="red",low = "blue")+
  theme_test(base_size = 14,base_rect_size = 1)+labs(x="Enrich Factor",y="", title="AMF-module4 GO enrichment")+
  scale_y_discrete(labels = c(sig.tab_ALL_0.01$Description))+guides(size=guide_legend(title = "Gene number"))+
  theme(axis.text.y = element_text(color = (y_text_color)),panel.grid.major=element_line(colour="gray85",linetype = "dashed"),legend.position =  "bottom",legend.box = "vertical")

ggsave("AMF-module4 GO enrichment.pdf",width = 8, height =8)
